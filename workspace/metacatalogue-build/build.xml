<!-- ===================================
==  Copyright 2010-2014 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
==  
==  This file is part of SITools2.
==  
==  SITools2 is free software: you can redistribute it and/or modify
==  it under the terms of the GNU General Public License as published by
==  the Free Software Foundation, either version 3 of the License, or
==  (at your option) any later version.
==  
==  SITools2 is distributed in the hope that it will be useful,
==  but WITHOUT ANY WARRANTY; without even the implied warranty of
==  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
==  GNU General Public License for more details.
==  
==  You should have received a copy of the GNU General Public License
==  along with SITools2.  If not, see <http://www.gnu.org/licenses/>.
==================================== -->
<!--
==============================================================================
=== Build file to allow ant (http://jakarta.apache.org/ant/) to be used
=== to build the Sitools project.
===
=== Author : AKKA Technologies
===
=== name    : nom du projet
===	default : tache ant executee par defaut
===	basedir : repertoire courant lors de l'execution des taches ant
===
==============================================================================
-->
<project name="fr.cnes.sitools.metacatalogue.build" default="build" basedir=".">


	<!-- Chargement du build.properties ( contient le HOST ) -->
	<property file="build.properties" prefix="sitools" />

	<!-- Creating distribution folder from tag -->
	<property name="distribution.dir" value="DISTRIBUTION-${sitools.project.version}" />
	<property name="distribution.sources.dir" value="${distribution.dir}/sources" />
	<property name="distribution.tmp.dir" value="${distribution.dir}/tmp" />


	<property name="workspace.dir" value=".." />
	<property name="fr.cnes.sitools.metacatalogue.core.dir" value="${workspace.dir}/fr.cnes.sitools.metacatalogue.core" />
	<property name="conf.dir" value="${fr.cnes.sitools.metacatalogue.core.dir}/conf" />


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		MAIN Target 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--	<target name="build" depends="init-git, export-git, javadoc, file-list, tar-gz, checksum" description="Création d'une distribution" />-->
	<target name="build" depends="init-git, export-git-metacatalogue, izpack, javadoc, file-list, tar-gz, checksum" description="Création d'une distribution" />

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for file lists and README.txt 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!--<target name="init-files" description="Copie le jar IzPack">
		<copy todir="${distribution.dir}" file="${sitools.ROOT_DIRECTORY}/workspace/metacatalogue-install-izpack/SITools2-Metacatalogue-${sitools.project.version}-install.jar" />
		<copy todir="${distribution.dir}" file="${sitools.ROOT_DIRECTORY}/workspace/fr.cnes.sitools.metacatalogue.core/README.txt" />
	</target>-->

	<target name="init-git" description="Initiatialisation de la creation de la distribution">
		<echo message="preparing folders ..." />
		<delete dir="${distribution.dir}" />
		<mkdir dir="${distribution.dir}" />
	</target>

	<target name="export-git-metacatalogue" description="Tache GIT d'export de la version actuelle">
		<antcall target="export-git">
			<param name="url" value="${sitools.git.repository.url}" />
			<param name="dir" value="${distribution.sources.dir}" />
			<param name="tag" value="${sitools.git.repository.tag}" />
		</antcall>
	</target>

	<target name="export-git" description="Tache GIT d'export de la version actuelle">
		<exec executable="scripts/clone-tag.bat" osfamily="windows" failonerror="true">
			<arg value="${url}" />
			<arg value="${dir}" />
			<arg value="${tag}" />
		</exec>

		<exec executable="scripts/clone-tag.sh" osfamily="unix" failonerror="true">
			<arg value="${url}" />
			<arg value="${dir}" />
			<arg value="${tag}" />
		</exec>
	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
			Targets for IzPack 
		+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="izpack" description="Copy IzPack from already generated izpack">
		<copy 
			file="../../../build/workspace/metacatalogue-install-izpack/SITools2-Metacatalogue-${sitools.project.version}-install.jar"
			todir="${distribution.dir}/"
			overwrite="true"/>
	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for file lists and README.txt 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="file-list-generic" description="Genere la liste des fichiers, le README et la liste des fichiers A/M/D">
		<exec executable="scripts/diff-files.bat" osfamily="windows" failonerror="true">
			<arg value="${reference}"/>
			<arg value="${tag}"/>
			<arg value="${dir}"/>
		</exec>
		
		<exec executable="scripts/diff-files.sh" osfamily="unix" failonerror="true">
			<arg value="${reference}"/>
			<arg value="${tag}"/>
			<arg value="${dir}"/>
		</exec>

		<path id="list.files">
			<fileset dir="${dir}">
				<include name="**/*.*"/>
				<exclude name=".git/**"/>
			</fileset>
		</path>
		<property name="files" refid="list.files"/>
		<pathconvert property="list" refid="list.files" pathsep="&#x0A;">
			<mapper>
				<globmapper from='${sitools.ROOT_DIRECTORY}/workspace/metacatalogue/${dir}/*' to="*" handledirsep="true"/>
			</mapper>
		</pathconvert>
		<echo message="Files : &#x0A;${list}" append="true" file="${dir}/list-file.txt"/>
	</target>
	
	
	<target name="file-list" description="Genere la liste des fichiers, le README et la liste des fichiers A/M/D">
		<antcall target="file-list-generic">
			<param name="reference" value="${sitools.git.repository.tag.ref}" />
			<param name="tag" value="${sitools.git.repository.tag}" />
			<param name="dir" value="${distribution.sources.dir}" />
		</antcall>
		
		<move todir="${distribution.dir}">
		    <fileset dir="${distribution.sources.dir}" includes="*.txt"/>
		</move>
		
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for archive creation
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="tar-gz" description="Genere l archive">
		<!-- Creating archive -->
		<property name="archive.path" value="${distribution.dir}/${sitools.project.title}-${sitools.project.version}.tar.gz" />
		<echo message="generating archive ${archive.path}" />
		<tar destfile="${archive.path}" compression="gzip">
			<fileset dir="${distribution.sources.dir}">
			</fileset>
		</tar>
	</target>



	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for MD5
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="checksum" description="Genere le MD5 de l archive">

		<!-- Generating MD5 checksum -->
		<echo message="generating MD5 ..." />
		<checksum forceOverwrite="yes" algorithm="MD5" todir="${distribution.dir}">
			<fileset dir="${distribution.dir}">
				<include name="${sitools.project.title}-${sitools.project.version}.tar.gz" />
			</fileset>
		</checksum>

		<!-- Check MD5 generated -->
		<echo message="verifying MD5 ..." />
		<checksum algorithm="MD5" todir="${distribution.dir}" verifyProperty="isMD5ok">
			<fileset dir="${distribution.dir}">
				<include name="${sitools.project.title}-${sitools.project.version}.tar.gz" />
			</fileset>
		</checksum>
	</target>

	<echo message="${distribution.dir}/workspace/fr.cnes.sitools.metacatalogue.core/src" />

	<path id="javadoc">
		<pathelement location="${distribution.sources.dir}/workspace/fr.cnes.sitools.metacatalogue.core/src" />
	</path>

	<!-- Nom des packages du projet utilises par javadoc -->
	<property name="project.packagenames" value="fr.cnes.sitools" />
	<property name="out.javadoc.dir" value="${distribution.dir}/documentation/javadoc" />


	<!-- Target for Javadoc -->
	<target name="javadoc" description="Target to create javadoc">
		<!-- Generation de la javadoc du projet -->
		<javadoc sourcepathref="javadoc" 
			packagenames="${project.packagenames}.*" 
			destdir="${out.javadoc.dir}" 
			author="true" public="true"
			version="true" use="true"
			windowtitle="${project.fullname} ${project.version}"
			doctitle="${project.fullname} ${project.version}"
			bottom="Copyright &amp;copy; ${year} ${owner}. All Rights Reserved.">
			<classpath>
				<path>
					<fileset dir="${distribution.sources.dir}/cots/restlet-jse-2.1.0">
						<include name="**/*.jar" />
					</fileset>
				</path>
				<path>
					<fileset dir="${distribution.sources.dir}/workspace/fr.cnes.sitools.metacatalogue.libraries">
						<include name="**/*.jar" />
					</fileset>
				</path>
			</classpath>
		</javadoc>
	</target>

	<!-- Supprime le texte de licence au début de chaque fichier -->
	<target name="change_copyright" description="Change the copyright year values in all the files of the workspace">
		<echo message="Replace 'Copyright 2010-2014 CNES' with 'Copyright 2010-2014 CNES'">
		</echo>
		<replace value="Copyright 2010-2014 CNES" token="Copyright 2010-2014 CNES" failOnNoReplacements="true" summary="true" encoding="ISO-8859-1">
			<fileset dir="../..">
				<include name="**/*.java" />
				<include name="**/*.js" />
				<include name="**/*.css" />
				<include name="**/*.xml" />
				<include name="**/*.properties" />
			</fileset>
		</replace>
	</target>

	<!-- Ajoute le texte de licence au début de chaque fichier -->
	<target name="replace_headers">
		<echo message="changing all files header in directory : ${workspace.dir}" />
		<loadfile property="javaheader" srcFile="${conf.dir}/licences/header_GPLv3.txt" />
		<replaceregexp match="(/\*.*\*/.*)??^package " flags="sm" replace="${javaheader}${line.separator}package ">
			<fileset dir="${workspace.dir}">
				<include name="**/*.java" />
			</fileset>
		</replaceregexp>
	</target>

	<!-- Supprime le texte de licence au début de chaque fichier -->
	<target name="remove_headers">
		<replaceregexp match="(/\*.*\*/.*)??^package " flags="sm" replace="package ">
			<fileset dir="src">
				<include name="**/*.java" />
			</fileset>
		</replaceregexp>
	</target>
	
	<target name="changeVersion" description="Change the version in all the Sitools files">
		<echo message="Replace ${sitools.project.version.old} with ${sitools.project.version}">
		</echo>
		<replace 
    		dir="../.."
    		value="${sitools.project.version}"
    		failOnNoReplacements="true"
    		includesfile="list_files_for_version.properties"    			
    		summary="true"
    		encoding="ISO-8859-1">
			<!-- exemple : Starter.VERSION=0.9.1RC -->
			<replacefilter 
    			token="VERSION=${sitools.project.version.old}"
    			value="VERSION=${sitools.project.version}"/>
			<!-- exemple : <property name="project.tag"         value="0.9.1RC" />	-->
			<replacefilter 
    			token="&lt;property name=&quot;project.version&quot;         value=&quot;${sitools.project.version.old}&quot;/&gt;"
    			value="&lt;property name=&quot;project.version&quot;         value=&quot;${sitools.project.version}&quot;/&gt;"/>
			<!-- exemple : <property name="project.tag" value="0.9.1RC" />	(with only one space)-->
			<replacefilter 
	   			token="&lt;property name=&quot;project.version&quot; value=&quot;${sitools.project.version.old}&quot;/&gt;"
    			value="&lt;property name=&quot;project.version&quot; value=&quot;${sitools.project.version}&quot;/&gt;"/>
			<!-- exemple : <appversion>0.9.1RC</appversion> -->
			<replacefilter 
    			token="&lt;appversion&gt;${sitools.project.version.old}&lt;/appversion&gt;"
    			value="&lt;appversion&gt;${sitools.project.version}&lt;/appversion&gt;"/>
			<!-- exemple : sonar.projectVersion=0.9.5 -->
			<replacefilter 
    			token="sonar.projectVersion=${sitools.project.version.old}"
    			value="sonar.projectVersion=${sitools.project.version}"/>
		</replace>
	</target>



</project>
